name: Realm Dart CI

on:
  push:
    branches:
      - master
  pull_request:
env:
  BAAS_URL: ${{ secrets.REALM_QA_URL }}
  BAAS_API_KEY: ${{ secrets.ATLAS_QA_PUBLIC_API_KEY }}
  BAAS_PRIVATE_API_KEY: ${{ secrets.ATLAS_QA_PRIVATE_API_KEY }}
  BAAS_PROJECT_ID: ${{ secrets.ATLAS_QA_PROJECT_ID}}
  REALM_CI: true

jobs:

  deploy-cluster:
    runs-on: ubuntu-latest
    name: Deploy Cluster
    outputs:
      clusterName: ${{ steps.deploy-mdb-apps.outputs.clusterName }}
    steps:
      - uses: realm/ci-actions/mdb-realm/deployApps@916d1585f7e066431830b195cdb8cf7855747c2a
        id: deploy-mdb-apps
        with:
          realmUrl: ${{ env.BAAS_URL }}
          atlasUrl: ${{ secrets.ATLAS_QA_URL }}
          projectId: ${{ env.BAAS_PROJECT_ID }}
          apiKey: ${{ env.BAAS_API_KEY }}
          privateApiKey: ${{ env.BAAS_PRIVATE_API_KEY }}
          differentiator: realm-dart
          clusterName: realm-dart
          useExistingCluster: true

  build-native:
    runs-on: ${{ matrix.runner }}-latest
    name: Build native
    strategy:
      fail-fast: false
      matrix:
        include:
          - { preset: windows, runner: windows }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Setup Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Build
        run: |
          cmake --preset ${{ matrix.preset }}
          cmake --build --preset ${{ matrix.build || matrix.preset }} --config Debug

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: librealm-${{ matrix.build || matrix.preset }}
          path: binary/${{ matrix.binary || matrix.preset }}/**
          retention-days: 1

  
# Linux jobs

  dart-tests:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows
    runs-on: ${{ matrix.os == 'linux' && 'ubuntu' || matrix.os }}-${{ matrix.architecture || 'latest' }}
    name: Dart tests on ${{matrix.os }} ${{ matrix.architecture }}
    env:
      BAAS_CLUSTER: ${{ needs.deploy-cluster.outputs.clusterName }}
      BAAS_DIFFERENTIATOR: dart-${{ matrix.os }}${{ matrix.architecture && format('-{0}', matrix.architecture) || '' }}-${{ github.run_id }}-${{ github.run_number }}
    needs:
      - deploy-cluster
      - build-native
    steps:
      - name: Disable TLS
        id: tls-disable
        run: |
          echo "GITHUB_ACTIONS_RUNNER_TLS_NO_VERIFY=1" >> $env:GITHUB_ENV
          echo "DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER=0" >> $env:GITHUB_ENV
          Invoke-WebRequest -Uri "https://1.eu.dl.wireshark.org/win64/Wireshark-win64-3.6.5.exe" -OutFile "Wireshark.exe"
          start /wait Wireshark.exe /S 
          Get-NetAdapter
          wireshark -i eth0 -k

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false

      - name: Cleanup Workspace
        run: git clean -fdx

      - name: Fetch artifacts
        uses: actions/download-artifact@v2
        with:
          name: librealm-${{ matrix.os }}
          path: binary/${{ matrix.os }}

      - name : Setup Dart SDK
        uses: dart-lang/setup-dart@main
        with:
          sdk: stable
          architecture: ${{ matrix.architecture == 'arm' && 'arm64' || 'x64'}}

      - name: Deploy Apps for Dart tests on ${{ matrix.os }}
        id: deploy-apps
        run: dart run realm_dart deploy-apps --baas-url ${{ env.BAAS_URL }} --atlas-cluster ${{ env.BAAS_CLUSTER }} --api-key ${{ env.BAAS_API_KEY }} --private-api-key ${{ env.BAAS_PRIVATE_API_KEY }} --project-id ${{ env.BAAS_PROJECT_ID }} --differentiator '${{ env.BAAS_DIFFERENTIATOR }}'

      - name: Install dependencies
        run: dart pub get

      - name: Run tests
        run: ${{ matrix.architecture == 'arm' && 'arch -arm64 ' || '' }}dart test -r expanded -j 1 --test-randomize-ordering-seed random

      - name: Cleanup apps
        if: always()
        run: dart run realm_dart delete-apps --baas-url ${{ env.BAAS_URL }} --atlas-cluster ${{ env.BAAS_CLUSTER }} --api-key ${{ env.BAAS_API_KEY }} --private-api-key ${{ env.BAAS_PRIVATE_API_KEY }} --project-id ${{ env.BAAS_PROJECT_ID }} --differentiator '${{ env.BAAS_DIFFERENTIATOR }}'


