name: Realm Dart CI

on:
  push:
    branches:
      - master
  pull_request:
env:
  BAAS_URL: ${{ secrets.REALM_QA_URL }}
  BAAS_API_KEY: ${{ secrets.ATLAS_QA_PUBLIC_API_KEY }}
  BAAS_PRIVATE_API_KEY: ${{ secrets.ATLAS_QA_PRIVATE_API_KEY }}
  BAAS_PROJECT_ID: ${{ secrets.ATLAS_QA_PROJECT_ID}}
  REALM_CI: true

jobs:

  deploy-cluster:
    runs-on: ubuntu-latest
    name: Deploy Cluster
    outputs:
      clusterName: ${{ steps.deploy-mdb-apps.outputs.clusterName }}
    steps:
      - uses: realm/ci-actions/mdb-realm/deployApps@916d1585f7e066431830b195cdb8cf7855747c2a
        id: deploy-mdb-apps
        with:
          realmUrl: ${{ secrets.REALM_QA_URL }}
          atlasUrl: ${{ secrets.ATLAS_QA_URL }}
          projectId: ${{ secrets.ATLAS_QA_PROJECT_ID }}
          apiKey: ${{ secrets.ATLAS_QA_PUBLIC_API_KEY }}
          privateApiKey: ${{ secrets.ATLAS_QA_PRIVATE_API_KEY }}
          differentiator: realm-dart
          clusterName: ci-dart
          useExistingCluster: true

  build-native:
    runs-on: ${{ matrix.runner }}-latest
    name: Build native
    strategy:
      fail-fast: false
      matrix:
        include:
          - { preset: windows, runner: windows }
          - { preset: linux, runner: ubuntu }         
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Check cache
        id: check-cache
        if: ${{ !contains(github.head_ref, 'release/') }}
        uses: actions/cache@v3
        with:
          path: ./binary/**
          key: binaries-${{ matrix.build || matrix.preset }}-${{hashFiles('./src/**')}}

      - name: Setup Ninja
        if: contains(github.head_ref, 'release/') || steps.check-cache.outputs.cache-hit != 'true'
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Get vcpkg submodule commit sha
        id: vcpkg_cache_key
        if: contains(github.head_ref, 'release/') || steps.check-cache.outputs.cache-hit != 'true'
        working-directory: src/realm-core/tools/vcpkg/ports
        shell: bash
        run: echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Setup Vcpkg
        if: contains(github.head_ref, 'release/') || steps.check-cache.outputs.cache-hit != 'true'
        uses: friendlyanon/setup-vcpkg@v1
        with:
          path: src/realm-core/tools/vcpkg/ports
          cache-key: vcpkg-${{ matrix.preset }}-${{ hashFiles('./src/realm-core/tools/vcpkg/vcpkg.json') }}-${{ steps.vcpkg_cache_key.outputs.commit }}
          cache-restore-keys: vcpkg-${{ matrix.preset }}-

      - name: Setup Android NDK
        if: startsWith(matrix.preset, 'android-')
        run: echo "ANDROID_NDK=$ANDROID_NDK_LATEST_HOME" >> $GITHUB_ENV

      - name: Build
        if: ${{ contains(github.head_ref, 'release/') || steps.check-cache.outputs.cache-hit != 'true' }}
        run: |
          cmake --preset ${{ matrix.preset }}
          cmake --build --preset ${{ matrix.build || matrix.preset }} --config Release

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: librealm-${{ matrix.build || matrix.preset }}
          path: binary/${{ matrix.binary || matrix.preset }}/**
          retention-days: 1

 
# Linux jobs

  dart-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [linux, windows]
    runs-on: ${{ (matrix.os == 'linux' && 'ubuntu') || matrix.os }}-latest
    name: Dart tests on ${{matrix.os  }}
    env:
      BAAS_CLUSTER: ${{ needs.deploy-cluster.outputs.clusterName }}
      BAAS_DIFFERENTIATOR: dart-${{ matrix.os }}
    needs:
      - deploy-cluster
      - build-native
    steps:
      - name: Disable IPv6 teredo
        if: ${{matrix.os == 'windows' }}
        run: netsh interface teredo set state disabled
      - name: Disable IPv6 6to4
        if: ${{matrix.os == 'windows' }}
        run: netsh interface ipv6 6to4 set state state=disabled undoonstop=disabled
      - name: Disable IPv6 isatap
        if: ${{matrix.os == 'windows' }}
        run: netsh interface ipv6 isatap set state state=disabled
      - name: DNS flush
        if: ${{matrix.os == 'windows' }}
        run: ipconfig /flushdns
      - name: WinDefend stop
        if: ${{matrix.os == 'windows' }}
        run:  powershell Set-MpPreference -DisableRealtimeMonitoring $true
      
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: false

      - name: Fetch artifacts
        uses: actions/download-artifact@v2
        with:
          name: librealm-${{ matrix.os }}
          path: binary/${{ matrix.os }}

      - name : Setup Dart SDK
        uses: dart-lang/setup-dart@main
        with:
          sdk: stable

      - name: Deploy Apps for Dart tests on ${{ matrix.os }}
        id: deploy-apps
        run: echo "::set-output name=appIds::$(dart run realm_dart deploy-apps --baas-url ${{ secrets.REALM_QA_URL }} --atlas-cluster ${{ needs.deploy-cluster.outputs.clusterName }} --api-key ${{ secrets.ATLAS_QA_PUBLIC_API_KEY }} --private-api-key ${{ secrets.ATLAS_QA_PRIVATE_API_KEY }} --project-id ${{ secrets.ATLAS_QA_PROJECT_ID }} --differentiator 'dart-${{  matrix.os }}' | tail -1)"

      - name: Install dependencies
        run: dart pub get

      - name: Run tests
        run: dart test -r expanded -j 1 --test-randomize-ordering-seed random

      - name: Cleanup apps
        if: always()
        run: dart run realm_dart delete-apps --appIds '${{ steps.deploy-apps.outputs.appIds }}' --baas-url ${{ secrets.REALM_QA_URL }} --atlas-cluster ${{ needs.deploy-cluster.outputs.clusterName }} --api-key ${{ secrets.ATLAS_QA_PUBLIC_API_KEY }} --private-api-key ${{ secrets.ATLAS_QA_PRIVATE_API_KEY }} --project-id ${{ secrets.ATLAS_QA_PROJECT_ID }} --differentiator 'dart-${{  matrix.os }}'
