name: Publish Release
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to publish packages to
        options:
        - public
        - internal
      dry-run:
        type: boolean
        description: Run the workflow without actually uploading packages
jobs:
  main:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment == 'public' && 'Production' || 'Staging' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: Read version
      id: get-version
      run: |
        pkgVersion=$(sed -ne "s/^version: \(.*\)/\1/p" pubspec.yaml)
        echo "::set-output name=version::$pkgVersion"
      shell: bash

    - name : Setup Dart SDK
      uses: dart-lang/setup-dart@main
      with:
        sdk: stable

    - name: Download all artifacts
      uses: dawidd6/action-download-artifact@d0f291cf39bd21965ea9c4c6e210fc355c3844ed
      with:
        workflow: ci.yml
        commit: ${{ github.sha }}
        path: ${{ github.workspace }}/binary/
        workflow_conclusion: completed

    - name: Rename all artifact folders
      run: |
        for directory in *; do
          mv "$directory" "${directory#*-}"
        done
      working-directory: binary

    - name: Temp
      run: find ./binary

    - name: Archive Linux binary
      run: dart run realm_dart archive --source-dir ${{ github.workspace }}/binary/linux

    - name: Archive iOS binary
      run: |
        mv binary/librealm-linux binary/linux
        dart run realm_dart archive --source-dir ${{ github.workspace }}/binary/ios

    - name: Archive macOS binary
      run: dart run realm_dart archive --source-dir ${{ github.workspace }}/binary/macos

    - name: Archive Windows binary
      run: dart run realm_dart archive --source-dir ${{ github.workspace }}/binary/windows

    - name: Archive Android binary
      run: dart run realm_dart archive --source-dir ${{ github.workspace }}/binary/android

    - name: Temp 2
      run: find ./binary

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.DOCS_S3_ACCESS_KEY }}
    #     aws-secret-access-key: ${{ secrets.DOCS_S3_SECRET_KEY }}
    #     aws-region: us-east-2
    # - name: Upload docs
    #   run: |
    #     Expand-Archive -Path Realm/packages/Docs.zip/Docs.zip -DestinationPath Realm/packages
    #     $versions = "${{ steps.get-version.outputs.version }}", "latest"
    #     Foreach ($ver in $versions)
    #     {
    #       aws s3 sync --acl public-read "${{ github.workspace }}\Realm\packages\_site" s3://realm-sdks/realm-sdks/dotnet/$ver/
    #     }

    - name: Find Release PR
      uses: juliangruber/find-pull-request-action@f9f7484f8237cf8485e5ab826e542ba5dd9e9c6e
      id: find-pull-request
      with:
        branch: ${{ github.ref }}

    # - name: Merge Pull Request
    #   uses: juliangruber/merge-pull-request-action@8a13f2645ad8b6ada32f829b2fae9c0955a5265d
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     number: ${{ steps.find-pull-request.outputs.number }}
    #     method: squash

    # - name: Publish Github Release
    #   uses: ncipollo/release-action@10c84d509b28aae3903113151bfd832314964f2e
    #   with:
    #     artifacts: binary/*.tar.gz
    #     body: 'Update release notes'
    #     # bodyFile: Realm/packages/ExtractedChangelog/ExtractedChangelog.md
    #     name: ${{ steps.get-version.outputs.version }}
    #     commit: temp-master
    #     tag: ${{ steps.get-version.outputs.version }}
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     draft: true

    # - name: Update Changelog
    #   run: |
    #     echo "## vNext (TBD)

    #     ### Enhancements
    #     * None

    #     ### Fixed
    #     * None

    #     ### Compatibility
    #     * Realm Studio: 11.0.0 or later.

    #     ### Internal
    #     * Using Core x.y.z.
    #     " | cat - CHANGELOG.md >> temp
    #     mv temp CHANGELOG.md
    #   shell: bash
    # - name: Create vNext PR
    #   id: vnext-pr
    #   uses: peter-evans/create-pull-request@7380612b49221684fefa025244f2ef4008ae50ad
    #   with:
    #     branch: prepare-vnext
    #     title: Prepare for vNext
    #     body: Update Changelog for vNext
    #     delete-branch: true
    #     base: main
    #     commit-message: Prepare for vNext
    # - name: Merge Pull Request
    #   uses: juliangruber/merge-pull-request-action@8a13f2645ad8b6ada32f829b2fae9c0955a5265d
    #   with:
    #     github-token: ${{ secrets.GITHUB_TOKEN }}
    #     number: ${{ steps.vnext-pr.outputs.pull-request-number }}
    #     method: squash
    # - name: 'Post to #realm-releases'
    #   uses: realm/ci-actions/release-to-slack@v3
    #   with:
    #     changelog: Realm/packages/ExtractedChangelog/ExtractedChangelog.md
    #     sdk: .NET
    #     webhook-url: ${{ secrets.SLACK_RELEASE_WEBHOOK }}
    #     version: ${{ steps.get-version.outputs.version }}
