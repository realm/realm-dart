name: Publish Release
on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        required: true
        description: Environment to publish packages to
jobs:
  prepare-packages:
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: https://static.realm.io/downloads/dart/1.2.3 # ${{ steps.upload-to-s3.outputs.url }}
    name: Prepare packages
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      release-folder: ${{ steps.archive-binaries.outputs.folder }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: Read version
      id: get-version
      run: |
        pkgVersion=$(sed -ne "s/^version: \(.*\)/\1/p" pubspec.yaml)
        echo "::set-output name=version::$pkgVersion"
      shell: bash

    - name : Setup Dart SDK
      uses: dart-lang/setup-dart@main
      with:
        sdk: stable

    - name: Download all artifacts
      uses: dawidd6/action-download-artifact@d0f291cf39bd21965ea9c4c6e210fc355c3844ed
      with:
        workflow: ci.yml
        commit: ${{ github.sha }}
        path: ${{ github.workspace }}/binary/
        workflow_conclusion: completed

    # The rename is necessary because action-download-artifact will put things in a folder named the same
    # as the artifact name - i.e. librealm-linux, etc.
    - name: Archive binaries
      id: archive-binaries
      run: |
        for directory in binary/*; do
          targetDir="binary/${directory#*-}"
          mv "$directory" "$targetDir"
          dart run realm_dart archive --source-dir "${{ github.workspace }}/$targetDir"
        done

        targetFolder="${{ github.event.inputs.environment == 'Production' && steps.get-version.outputs.version || github.sha }}"
        mkdir -p release/$targetFolder
        mv binary/*.tar.gz release/$targetFolder
        echo "::set-output name=folder::$targetFolder"

    - name: Update realm_* path dependencies
      uses: jacobtomlinson/gha-find-replace@b76729678e8d52dadb12e0e16454a93e301a919d #! 2.0.0
      with:
        find: "  realm_(common|generator):(\\n|\\r\\n)    path:.*"
        replace: "  realm_$1: ${{ steps.get-version.outputs.version }}"
        include: "**pubspec.yaml"

    - name: Remove pubspec.yaml/publish_to:none
      uses: jacobtomlinson/gha-find-replace@b76729678e8d52dadb12e0e16454a93e301a919d #! 2.0.0
      with:
        find: "publish_to: none(\\n|\\r\\n)"
        replace: "\\n"
        include: "**pubspec.yaml"

    - name: Package common
      run: |
        cp -Lr ../../common .
        cd common
        dart pub publish --dry-run || true
      working-directory: release/${{ steps.archive-binaries.outputs.folder }}

    - name: Package generator
      run: |
        cp -Lr ../../generator .
        cd generator
        dart pub publish --dry-run || true
      working-directory: release/${{ steps.archive-binaries.outputs.folder }}

    # realm_flutter has symlinks to native binaries which should not be packaged
    - name: Cleanup realm_flutter binary symlinks
      run: |
        rm -rf android/src/main/cpp/lib
        rm ios/realm_flutter_ios.xcframework
        rm ios/src
        rm linux/binary
        rm windows/binary
        rm macos/librealm_dart.dylib
      working-directory: flutter/realm_flutter

    - name: Package realm_flutter
      run: |
        cp -Lr ../../flutter/realm_flutter .
        cd realm_flutter
        dart pub publish --dry-run || true
      working-directory: release/${{ steps.archive-binaries.outputs.folder }}

    - name: Package realm_dart
      run: |
        mkdir realm_dart
        cp -Lr ../../bin ../../example ../../lib ../../test realm_dart
        rsync -vt ../../* realm_dart/
        cd realm_dart
        dart pub publish --dry-run || true
      working-directory: release/${{ steps.archive-binaries.outputs.folder }}

    - name: Extract Changelog
      run: |
        $match = Get-Content ../../CHANGELOG.md -Raw | select-string -pattern "(?ms)^(?<latestVersionChanges>.+?)(?=(\n|\r\n)## )"
        $latestChanges = $match.Matches[0].Groups["latestVersionChanges"].Value;
        $latestChanges | Out-File ExtractedChangelog.md
      working-directory: release/${{ steps.archive-binaries.outputs.folder }}
      shell: pwsh

    - name: Upload release folder
      uses: actions/upload-artifact@v2
      with:
        name: release-bundle
        path: release/**
        retention-days: 30

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY }}
    #     aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_KEY }}
    #     aws-region: us-east-1

    # - name: Upload release folder to S3
    #   id: upload-to-s3
    #   run: |
    #     s3_folder="static.realm.io/downloads/dart/${{ needs.prepare-packages.outputs.release-folder }}"
    #     aws s3 sync --acl public-read "${{ github.workspace }}/release/${{ needs.prepare-packages.outputs.release-folder }}" "s3://$s3_folder"
    #     echo "::set-output name=url::https://$s3_folder"
  publish-packages:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.environment == 'Production' }}
    environment:
      name: 'Production'
      url: ${{ steps.upload-to-s3.outputs.url }}
    name: Publish release
    needs:
    - prepare-packages
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: false

    - name: Download release folder
      uses: actions/download-artifact@v2
      with:
        name: release-bundle
        path: release

    - name : Setup Dart SDK
      uses: dart-lang/setup-dart@main
      with:
        sdk: stable

    # TODO: remove --dry-run
    - name: Publish packages to pub.dev
      run: |
        dart pub publish --dry-run --directory common || true
        dart pub publish --dry-run --directory generator || true
        dart pub publish --dry-run --directory realm_dart || true
        dart pub publish --dry-run --directory realm_flutter || true
      working-directory: release/${{ needs.prepare-packages.outputs.release-folder }}

    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY }}
    #     aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_KEY }}
    #     aws-region: us-east-1

    # - name: Upload release to S3
    #   id: upload-to-s3
    #   run: |
    #     s3_folder="static.realm.io/downloads/dart/${{ needs.prepare-packages.outputs.release-folder }}"
    #     aws s3 sync --acl public-read "${{ github.workspace }}/release/${{ needs.prepare-packages.outputs.release-folder }}" "s3://$s3_folder"
    #     echo "::set-output name=url::https://$s3_folder"

    # - name: Configure Docs Credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.DOCS_S3_ACCESS_KEY }}
    #     aws-secret-access-key: ${{ secrets.DOCS_S3_SECRET_KEY }}
    #     aws-region: us-east-2
    # - name: Upload docs
    #   run: |
    #     Expand-Archive -Path Realm/packages/Docs.zip/Docs.zip -DestinationPath Realm/packages
    #     $versions = "${{ steps.get-version.outputs.version }}", "latest"
    #     Foreach ($ver in $versions)
    #     {
    #       aws s3 sync --acl public-read "${{ github.workspace }}\Realm\packages\_site" s3://realm-sdks/realm-sdks/dotnet/$ver/
    #     }

    - name: Find Release PR
      uses: juliangruber/find-pull-request-action@f9f7484f8237cf8485e5ab826e542ba5dd9e9c6e
      id: find-pull-request
      with:
        branch: ${{ github.ref }}

    - name: Merge Pull Request
      uses: juliangruber/merge-pull-request-action@8a13f2645ad8b6ada32f829b2fae9c0955a5265d
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        number: ${{ steps.find-pull-request.outputs.number }}
        method: squash

    - name: Publish Github Release
      uses: ncipollo/release-action@10c84d509b28aae3903113151bfd832314964f2e
      with:
        artifacts: release/${{ needs.prepare-packages.outputs.release-folder }}/*.tar.gz
        body: 'Update release notes'
        bodyFile: release/${{ needs.prepare-packages.outputs.release-folder }}/ExtractedChangelog.md
        name: ${{ needs.prepare-packages.outputs.version }}
        # TODO: move to master
        commit: test-master
        tag: ${{ needs.prepare-packages.outputs.version }}
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: true

    - name: Update Changelog
      run: |
        echo "## vNext (TBD)

        ### Enhancements
        * None

        ### Fixed
        * None

        ### Compatibility
        * Realm Studio: 11.0.0 or later.

        ### Internal
        * Using Core x.y.z.
        " | cat - CHANGELOG.md >> temp
        mv temp CHANGELOG.md
      shell: bash

    - name: Create vNext PR
      id: vnext-pr
      uses: peter-evans/create-pull-request@7380612b49221684fefa025244f2ef4008ae50ad
      with:
        branch: prepare-vnext
        title: Prepare for vNext
        body: Update Changelog for vNext
        delete-branch: true
        base: main
        commit-message: Prepare for vNext

    - name: Merge Pull Request
      uses: juliangruber/merge-pull-request-action@8a13f2645ad8b6ada32f829b2fae9c0955a5265d
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        number: ${{ steps.vnext-pr.outputs.pull-request-number }}
        method: squash

    - name: 'Post to #realm-releases'
      uses: realm/ci-actions/release-to-slack@v3
      with:
        changelog: release/${{ needs.prepare-packages.outputs.release-folder }}/ExtractedChangelog.md
        sdk: dart
        webhook-url: ${{ secrets.SLACK_RELEASE_WEBHOOK }}
        version: ${{ needs.prepare-packages.outputs.version }}
