name: Realm Flutter for iOS

on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.[0-9]+.[0-9]+**' # matches tags like number(s).number(s).number(s)(any) for ex: 1.0.0 and also 1.0.0+beta
  pull_request:

jobs:
  CI:
    runs-on: macos-latest
    env:
      REALM_CI: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Set build platforms to 'simulator'
        run: echo "BUILD_PLATFORMS=simulator" >> $GITHUB_ENV

      - name: Set build platforms to all
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        run: echo "BUILD_PLATFORMS=" >> $GITHUB_ENV

      - name: get-ccache-id
        run: echo "CCACHE_ID=os:${{ runner.OS }} build:ios realm-core commit hash $(git submodule status src/realm-core | cut -c 1-41)" >> $GITHUB_ENV

      - name: install ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ env.CCACHE_ID }}

      - name: enable ccache
        run: |
              echo "PATH=/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH" >> $GITHUB_ENV
              echo "REALM_USE_CCACHE=TRUE" >> $GITHUB_ENV

      - name: Build Realm Flutter for iOS
        run: |
              ./scripts/build-ios.sh $BUILD_PLATFORMS

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Launch Simulator
        uses: futureware-tech/simulator-action@v1
        with:
          model: 'iPhone 8'
          os: 'iOS'
          os_version: '>= 14.0'

      - name: Run tests on iOS Simulator
        run: |
          flutter drive --target=test_driver/app.dart --dart-define=testName="" --suppress-analytics #--verbose
        working-directory: ./flutter/realm_flutter/tests

      - name: Set Archive Path
        if: ${{ success() && github.event_name == 'push' && github.ref_type == 'tag' }}
        run: |
          echo "ARCHIVE_PATH=$(pwd)/binary/ios.tar.gz" >> $GITHUB_ENV

      - name: Archive binary
        if: ${{ success() && github.event_name == 'push' && github.ref_type == 'tag' }}
        run: |
          dart run realm_dart archive --source-dir $(pwd)/binary/ios --output-file $ARCHIVE_PATH

      - name: Release artifacts
        if: ${{ success() && github.event_name == 'push' && github.ref_type == 'tag' }}
        uses: ncipollo/release-action@v1
        with:
          allowUpdates:  true
          artifactErrorsFailBuild: true
          draft: true
          omitNameDuringUpdate: true
          prerelease: false
          omitPrereleaseDuringUpdate: true
          artifacts: ${{ env.ARCHIVE_PATH }}
          body: "ADD RELEASE NOTES"
          omitBodyDuringUpdate: true
          token: ${{ secrets.GITHUB_TOKEN }}

