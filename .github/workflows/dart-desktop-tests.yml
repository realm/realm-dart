name: Dart desktop tests

on:
  workflow_call:
    inputs:
      runner:
        description: GitHub runner image to execute on.
        required: true
        type: string
      differentiator:
        description: Differentiator for the BaaS container.
        required: true
        type: string

env:
  REALM_CI: true
  BAAS_BAASAAS_API_KEY: ${{ secrets.BAASAAS_API_KEY}}
  BAAS_DIFFERENTIATOR: ${{ inputs.differentiator }}

jobs:
  dart-tests:
    runs-on: ${{ inputs.runner }}
    name: Dart tests on ${{ inputs.runner }}
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Set RUNNER_OS
        # there is no such thing as ${{ tolower(runner.os) }}, hence this abomination ¯\_(ツ)_/¯ 
        run: echo ${{ runner.os }} | awk '{print "RUNNER_OS=" tolower($0)}' >> $GITHUB_ENV
        shell: bash

      - name: Fetch artifacts
        uses: actions/download-artifact@v4
        with:
          name: librealm-${{ env.RUNNER_OS }}
          path: packages/realm_dart/binary/${{ env.RUNNER_OS }}

      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@main
        with:
          sdk: stable

      - name: Setup Melos
        run: |
          dart pub global activate melos
          melos bootstrap --no-flutter
          melos setup

      - name: Bump ulimit on macos
        run: ulimit -n 10240
        if: ${{ contains(runner.os, 'macos') }}

      - name: Run tests ${{ runner.name }} ${{ runner.arch }}
        run: melos test:unit

      # TODO: Publish all reports
      - name: Publish Test Report
        uses: dorny/test-reporter@v1.8.0
        if: success() || failure()
        with:
          name: Test Results Dart ${{ runner.name }} ${{ runner.arch }}
          path: test-results.json
          reporter: dart-json
          only-summary: true
          working-directory: packages/realm_dart

      - name: Gather coverage report
        if: inputs.runner == 'ubuntu-latest'
        run: |
          sudo apt-get install lcov
          melos coverage:convert
          melos coverage:gather
          melos coverage:groom

      - name: Publish coverage
        if: inputs.runner == 'ubuntu-latest'
        id: publish-coverage
        uses: coverallsapp/github-action@f350da2c033043742f89e8c0b7b5145a1616da6d
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: realm_dart
          path-to-lcov: ./coverage/lcov.info
          parallel: true
