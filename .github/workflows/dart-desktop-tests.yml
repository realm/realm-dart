name: Dart desktop tests

on:
  workflow_call:
    inputs:
      os:
        description: OS to execute on.
        required: true
        type: string
      runner:
        description: GitHub runner image to execute on.
        required: true
        type: string
      architecture:
        description: Architecture to execute on.
        required: false
        type: string
      differentiator:
        description: Differentiator for the BaaS container.
        required: true
        type: string

env:
  REALM_CI: true
  BAAS_BAASAAS_API_KEY: ${{ secrets.BAASAAS_API_KEY}}
  BAAS_DIFFERENTIATOR: ${{ inputs.differentiator }}

jobs:
  dart-tests:
    runs-on: ${{ inputs.runner }}
    name: Dart tests on ${{inputs.os }} ${{ inputs.architecture }}
    timeout-minutes: 45
    defaults:
      run:
        working-directory: packages/realm_dart

    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          submodules: false

      - name: Cleanup Workspace
        run: git clean -fdx

      - name: Fetch artifacts
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7
        with:
          name: librealm-${{ inputs.os }}
          path: packages/realm_dart/binary/${{ inputs.os }}

      - name : Setup Dart SDK
        uses: dart-lang/setup-dart@main
        with:
          sdk: stable
          architecture: ${{ inputs.architecture == 'arm' && 'arm64' || 'x64'}}

      - name: Install dependencies
        run: dart pub get

      - name: Bump ulimit
        run: ulimit -n 10240
        if: ${{ contains(inputs.os, 'macos') }}

      - name: Run tests
        run: ${{ inputs.architecture == 'arm' && 'arch -arm64 ' || '' }}dart test -r expanded --coverage ./coverage/ -j 1 --test-randomize-ordering-seed random --file-reporter="json:test-results.json" || true

      - name: Publish Test Report
        uses: dorny/test-reporter@v1.7.0
        if: success() || failure()
        with:
          name: Test Results Dart ${{ inputs.os }} ${{ inputs.architecture }}
          path: test-results.json
          reporter: dart-json
          only-summary: true
          working-directory: packages/realm_dart

      - name: Run ejson QA
        run: |
          dart pub global activate melos
          melos bootstrap
          melos qa
        working-directory: ejson

      # we're pruning generated files, the cli folder, as well as realm_bindings.dart from our coverage reports
      - name: Generate realm_dart coverage report
        if: inputs.runner == 'ubuntu-latest'
        run: |
          sudo apt-get install -y lcov
          dart run coverage:format_coverage \
            --in coverage/ \
            --out ./coverage/lcov.info \
            --check-ignore \
            --lcov \
            --packages .dart_tool/package_config.json \
            --report-on lib,common
          lcov --remove ./coverage/lcov.info '*.realm.dart' '*/lib/src/cli/*' '*/lib/src/native/realm_bindings.dart' -o coverage/pruned-lcov.info

      - name: Publish realm_dart coverage
        if: inputs.runner == 'ubuntu-latest'
        id: publish-coverage
        uses: coverallsapp/github-action@f350da2c033043742f89e8c0b7b5145a1616da6d
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: realm_dart
          path-to-lcov: packages/realm_dart/coverage/pruned-lcov.info
          parallel: true

      - name: Output Coveralls response
        if: inputs.runner == 'ubuntu-latest'
        run: echo ${{ steps.publish-coverage.outputs.coveralls-api-result }}